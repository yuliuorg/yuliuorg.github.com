<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>刘昱 | 核能动力系统工程师</title>
    <link>http://yuliu.org</link>
    <atom:link href="http://yuliu.org/feed/rss.xml" rel="self" type="application/rss+xml" />
	<description>刘昱 | 核能动力系统工程师</description>
    <language>zh-cn</language>
    <pubDate>Thu, 12 Jul 2012 22:51:09 +0800</pubDate>
    <lastBuildDate>Thu, 12 Jul 2012 22:51:09 +0800</lastBuildDate>

    
    <item>
      <title>喜欢的软件</title>
      <link>http://yuliu.org/2012/07/my_favorite_softwares/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2012/07/my_favorite_softwares</guid>
	  <description>&lt;p&gt;日常工作生活常用软件的列表，排名不分先后，但这个东西随时间的变化太快，不保证及时更新，欢迎拍砖。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;APPz&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;windows（没有理由不排在第一位）&lt;/li&gt;
&lt;li&gt;office （你已经发现我是一个微软控了吧）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;系统工具&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.vim.org/&quot;&gt;vim&lt;/a&gt; （嗯，我是第二类人，主要是*nux的cli下基本都自带vi，而且emacs的门槛太高，最近好像sublime text 2的好评如潮，有空再试试）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mozilla.org/en-US/firefox/new/&quot;&gt;firefox&lt;/a&gt; / &lt;a href=&quot;https://www.google.com/intl/en/chrome/browser/&quot;&gt;chrome&lt;/a&gt; （不争了，两个一起用）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ghisler.com/&quot;&gt;total command&lt;/a&gt; （据说有不少人是因为tc才留在windows的）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.voidtools.com/&quot;&gt;everything&lt;/a&gt; （快速搜索，这个功能难道不是系统应该直接集成的吗？）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.picpick.org/&quot;&gt;picpick&lt;/a&gt; （还能有比这个更好的截图软件吗）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工程小软件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://convertall.bellz.org/index.html&quot;&gt;ConvertAll&lt;/a&gt; （单位换算必备，使用python实现，单位组合是其最值得推荐之处）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序设计&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linqpad.net/&quot;&gt;LINQPad&lt;/a&gt; （使用LINQ与数据库进行交互和管理的工具，现在不经常用了）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    
    <item>
      <title>jekyll笔记</title>
      <link>http://yuliu.org/2012/07/jekyll_notes/</link>
      <pubDate>Wed, 04 Jul 2012 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2012/07/jekyll_notes</guid>
	  <description>&lt;h1&gt;jekyll的sitemap生成器&lt;/h1&gt;

&lt;p&gt;为了方便搜索引擎的收录，sitemap还是必要的。
好在jekyll支持插件，&lt;a href=&quot;http://www.kinnetica.com/&quot;&gt;kinnetica&lt;/a&gt;编了一个sitemap生成器，下载&lt;code&gt;sitemap_generator.rb&lt;/code&gt;丢到&lt;code&gt;_plugins&lt;/code&gt;目录，再打开该文件简单修改&lt;code&gt;MY_URL&lt;/code&gt;为网站地址即可。&lt;/p&gt;

&lt;h1&gt;jekyll在windows下的编码&lt;/h1&gt;

&lt;p&gt;为了便于调试等各种原因，本地的windows系统上安装了jekyll。
由于windows系统没有采用UTF-8编码，因此需要给jekyll（版本 0.11.2）在打开文件时指定编码，以保证它能够正常工作。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;[RubyDIR]\lib\ruby\gems\1.9.1\gems\jekyll-0.11.2\lib\jekyll\convertible.rb&lt;/code&gt; 文件27行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; self.content = File.read(File.join(base, name))
 self.content = File.read(File.join(base, name),:encoding=&amp;gt;&quot;utf-8&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;[RubyDIR]\lib\ruby\gems\1.9.1\gems\jekyll-0.11.2\lib\jekyll\tags\include.rb&lt;/code&gt; 文件23行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; source = File.read(@file)
 source = File.read(@file, :encoding =&amp;gt; &quot;utf-8&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    
    <item>
      <title>我的Vim（Vim-of-pisheng)</title>
      <link>http://yuliu.org/2012/06/vim_of_pisheng/</link>
      <pubDate>Fri, 29 Jun 2012 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2012/06/vim_of_pisheng</guid>
	  <description>&lt;h1&gt;1 Vim初始安装&lt;/h1&gt;

&lt;p&gt;主要是因为采用了Vundle的插件管理方式，因此一般使用下述步骤。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;下载安装&lt;/li&gt;
&lt;li&gt;修改&lt;code&gt;.vimrc或\_vimrc&lt;/code&gt;文件&lt;/li&gt;
&lt;li&gt;安装Vundle插件管理软件&lt;/li&gt;
&lt;li&gt;通过Vundle安装和管理插件&lt;br/&gt;
Vundle插件名需要区分大小写&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;2 vim的基本配置&lt;/h1&gt;

&lt;p&gt;这一部分具体可以参考&lt;code&gt;.vimrc或\_vimrc&lt;/code&gt;文件，设置中均进行了注释。&lt;/p&gt;

&lt;h1&gt;3 Vim插件&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=3458&quot;&gt;Vundle&lt;/a&gt;&lt;br/&gt;
vim插件管理包，需要git和curl的支持&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1708&quot;&gt;FencView&lt;/a&gt;&lt;br/&gt;
自动检测文件编码，也可以手动选择文件编码。&lt;br/&gt;
需要&lt;a href=&quot;http://mbbill.googlepages.com/iconv.dll&quot;&gt;iconv.dll&lt;/a&gt;的支持，在系统PATH路径下。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2657&quot;&gt;VOom&lt;/a&gt;&lt;br/&gt;
部分标记语言的标题自动摘要&lt;br/&gt;
需要python 2.X的支持，不能使用64位的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tpope/vim-markdown&quot;&gt;Markdown&lt;/a&gt;&lt;br/&gt;
提供markdown着色功能
为了便于识别两个空格表示的换行，修改&lt;code&gt;~\.vim\bundle\vim-markdown\syntax\markdown.vim&lt;/code&gt;，在96行增加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; hi def link markdownLineBreak             Todo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;markdownLineBreak其实在原始vim中已经定义，没有着色而已&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1658&quot;&gt;The NERD tree&lt;/a&gt;&lt;br/&gt;
一个文件浏览器插件，方便在vim中直接切换文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1218&quot;&gt;NERDCommenter&lt;/a&gt;&lt;br/&gt;
代码快速注释/取消注释插件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1984&quot;&gt;FuzzyFinder&lt;/a&gt;&lt;br/&gt;
buffer、文件、命令...的快速切换和浏览器，神器。&lt;br/&gt;
需要L9插件的支持&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=3252&quot;&gt;L9&lt;/a&gt;&lt;br/&gt;
vim脚本库。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=3227&quot;&gt;Simple-Javascript-Indenter&lt;/a&gt;&lt;br/&gt;
javascript缩进插件，支持OOP和jQuery&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2416&quot;&gt;jQuery&lt;/a&gt;&lt;br/&gt;
jQuery语法支持，包括关键字，和CSS选择器&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2620&quot;&gt;neocomplcache&lt;/a&gt;&lt;br/&gt;
自动完成插件，不需要ctags，但是可能占用较大的内存。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=4043&quot;&gt;neocomplcache-snippets_complete&lt;/a&gt;&lt;br/&gt;
提供在neocomplcache使用和snipMate.vim相似的功能。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;4 Vim的配色&lt;/h1&gt;

&lt;p&gt;个人在gui下喜欢使用torte的colorscheme，但是原始版本的配色没有考虑Pmenu的样式，使得Pmenu的色调很不搭（背景是粉红)。&lt;/p&gt;

&lt;p&gt;打开&lt;code&gt;colors\torte.vim&lt;/code&gt;，在文件最后加入下面几行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hi Pmenu guifg=#c0c0c0 guibg=#404080
hi PmenuSel guifg=#c0c0c0 guibg=#2050d0
hi PmenuSbar guifg=blue guibg=darkgray
hi PmenuThumb guifg=#c0c0c0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git和github</title>
      <link>http://yuliu.org/2012/06/git_and_github/</link>
      <pubDate>Fri, 29 Jun 2012 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2012/06/git_and_github</guid>
	  <description>&lt;h1&gt;1 git&lt;/h1&gt;

&lt;p&gt;一个版本管理和控制工具&lt;/p&gt;

&lt;h1&gt;2 github&lt;/h1&gt;

&lt;h2&gt;2.1 配置和使用github&lt;/h2&gt;

&lt;h2&gt;2.2 github pages&lt;/h2&gt;

&lt;p&gt;github提供了github pages的服务，不仅可以方便的为项目建立介绍页面，也可以用来建立个人页面。gitHub pages分两种，一种是你的gitHub用户名建立的[username].github.com这样的User &amp;amp; Organization Pages，另一种是依附项目的Project Pages。&lt;/p&gt;

&lt;h3&gt;User &amp;amp; Organization Pages&lt;/h3&gt;

&lt;p&gt;首先建立一个repo，名称只能是[username].github.com。每个用户名下面只能建立一个。该repo下master分支中的内容将被用作用户&amp;amp;组织页（站）内容。&lt;/p&gt;

&lt;p&gt;创建好repo之后，commit一个index.html文件，然后push到master分支即可。如果是第一次使用页面，大概需要10分钟左右才能生效，之后的更改则会立即生效。&lt;/p&gt;

&lt;p&gt;生效之后就可以访问[username].github.com，将会看到上传的index.html页面。&lt;/p&gt;

&lt;h3&gt;Project Pages&lt;/h3&gt;

&lt;p&gt;Project Pages放在项目相同的repo中，但是使用 gh-pages分支。其默认地址为[username].github.com/[projectname]。&lt;/p&gt;

&lt;h3&gt;yuliu.org的个人页设置&lt;/h3&gt;

&lt;p&gt;个人偏好通过本地的jekyll生成site后直接放入repo中，而不是使用github的jekyll引擎。
因此，本地目录的组织结构如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root \[ -&amp;gt; &quot;source&quot; \]
|- markdown files
|- html \[ -&amp;gt; &quot;master&quot; \]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;root目录指向git repo的source分支，html目录用来指向相同repo的master分支。&lt;/p&gt;

&lt;h4&gt;实现上述结构的方法&lt;/h4&gt;

&lt;p&gt;首先在root目录初始化一个repo。（$ 为cmd提示符）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 初始化本地repo
$ git init
# 提交文件
$ git add .
$ git commit -m &quot;init&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过上述命令建立了一个包含所有源文件的master分支，接着重命名该分支并push到服务器（remote）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 将本地master重命名为source
$ git branch -m master source
# 将github repo添加为origin
$ git remote add origin git@github.com:[username]/[username].github.com.git
# 将source分支push到服务器repo
$ git push -u origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样repo中只有一个分支：source，见者创建master分支。如果root目录存在html目录，先删除该html目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 获取一个github repo的副本到html
$ git clone git@github.com:[username]/[username].github.com.git html
$ cd html
# 建立一个独立的分支
$ git symbolic-ref HEAD refs/heads/master
$ rm .git/index
$ git clean -fdx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在master分支已经建立好，每当有新内容生成，只需要commit &amp;amp; push到服务器即可&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git add .
$ git commit -m &quot;updated&quot;
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;2.3 自定义域名&lt;/h2&gt;

&lt;p&gt;github page中，要想让username.github.com能通过你自己的域名来访问，需要在项目的根目录下新建一个名为CNAME的文件，文件内容为域名或者子域名名称，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yuliu.org
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着需要设置域名的DNS（这不是立即生效的），对于顶级域名需要建立一条 A记录 到 204.232.175.78。注意不是使用CNAME形式，否则可能对其他服务（例如email）造成影响。&lt;/p&gt;

&lt;p&gt;对于子域名最好使用CNAME记录，指向[username].github.com&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 修改IP地址, DNS, 网关</title>
      <link>http://yuliu.org/2011/05/modify_ip_dns_gateway_in_cento/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/05/modify_ip_dns_gateway_in_cento</guid>
	  <description>&lt;h1&gt;一、CentOS修改IP地址&lt;/h1&gt;


&lt;p&gt;修改对应网卡的IP地址的配置文件&lt;/p&gt;

&lt;p&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/p&gt;

&lt;blockquote&gt;#描述网卡对应的设备别名，例如ifcfg-eth0的文件中它为eth0
DEVICE=eth0
#设置网卡获得ip地址的方式，选项为static，dhcp或bootp，对应静态指定的 ip地址,通过dhcp协议获得的ip地址，通过bootp协议获得的ip地址
BOOTPROTO=static
#对应的子网广播地址
BROADCAST=192.168.1.255
#对应的网卡物理地址
HWADDR=00:07:E9:05:E8:B4
#如果设置网卡获得 ip地址的方式为静态指定，此字段就指定了网卡对应的ip地址
IPADDR=192.168.1.99
IPV6INIT=no
IPV6_AUTOCONF=no
#网卡对应的网络掩码
NETMASK=255.255.255.0
ONBOOT=yes #系统启动时是否设置此网络接口，设置为yes时，系统启动时激活此设备&lt;/blockquote&gt;


&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h1&gt;二、CentOS 修改网关&lt;/h1&gt;


&lt;p&gt;修改对应网卡的网关的配置文件&lt;/p&gt;

&lt;p&gt;vi /etc/sysconfig/network&lt;/p&gt;

&lt;blockquote&gt;#表示系统是否使用网络，一般设置为yes。如果设为no，则不能使用网络，而且很多系统服务程序将无法启动
NETWORKING=yes
#设置本机的主机名，这里设置的主机名要和/etc/hosts中设置的主机名对应
HOSTNAME=localhost.localdomain
#设置本机连接的网关的IP地址。例如，网关为192.168.1.1
GATEWAY=192.168.1.1&lt;/blockquote&gt;


&lt;h1&gt;三、CentOS 修改DNS&lt;/h1&gt;


&lt;p&gt;修改对应网卡的DNS的配置文件&lt;/p&gt;

&lt;p&gt;vi /etc/resolv.conf&lt;/p&gt;

&lt;blockquote&gt;#OPENDNS
nameserver 208.67.222.222
nameserver 208.67.220.220
nameserver 192.168.1.1
search localdomain&lt;/blockquote&gt;


&lt;h1&gt;四、重启网络&lt;/h1&gt;


&lt;blockquote&gt;/etc/init.d/network restart&lt;/blockquote&gt;


&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>华硕笔记本F8SA笔记本拆机+换主板电池未果</title>
      <link>http://yuliu.org/2011/05/disassembly_of_asus_notebook_f8sa/</link>
      <pubDate>Sat, 21 May 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/05/disassembly_of_asus_notebook_f8sa</guid>
	  <description>&lt;p&gt;用了快4年的华硕笔记本F8SA出了点小毛病，bios设置总是自动复位、通电自动启动等，初步判断是主板电池没电了。打电话问asus售后，告知换主板电池要200大洋。10块钱就能解决的事情要皮生花200块钱，心有不甘啊，遂决定DIY操作之。网上先搜了几个F8的拆机教程，都挺不错的，尤其是第一篇，共同的缺点是图片太小了。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt; &lt;a href=&quot;http://benyouhui.it168.com/thread-1086993-1-1.html&quot;&gt;F8S系列拆机详细图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;http://benyouhui.it168.com/viewthread.php?tid=846638&amp;amp;amp;extra=&amp;amp;amp;page=1&quot;&gt;无聊手痒 ASUS F8Sv 拆机耍&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;流程第一篇写得很清楚了，照着一步一步来就是、随便上几张图吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5628.jpg&quot; title=&quot;日立160G 5400rpm SATA硬盘&quot; alt=&quot;日立160G 5400rpm SATA硬盘&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5427.jpg&quot; title=&quot;hynix 1G DDR2 667 内存&quot; alt=&quot;hynix 1G DDR2 667 内存&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5621.jpg&quot; title=&quot;笔记本内存 安装&quot; alt=&quot;笔记本内存 安装&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5608.jpg&quot; title=&quot;INTEL T7500 CPU&quot; alt=&quot;INTEL T7500 CPU&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5618.jpg&quot; title=&quot;CPU安装&quot; alt=&quot;CPU安装&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5426.jpg&quot; title=&quot;CPU+散热器+内存+HD2600显卡&quot; alt=&quot;CPU+散热器+内存+HD2600显卡&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5604.jpg&quot; title=&quot;INTEL 4965AGN 无线网卡&quot; alt=&quot;INTEL 4965AGN 无线网卡&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5600.jpg&quot; title=&quot;显示器接头&quot; alt=&quot;显示器接头&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/05/IMG_5589.jpg&quot; title=&quot;电源开关&quot; alt=&quot;电源开关&quot; /&gt;&lt;/p&gt;

&lt;p&gt;拆电源开关上面这一块老费劲了，没想到更成为了终点，后面的前盖折腾了半天愣是没有弄下来。看来这200块钱果然是个技术加体力活啊~，还是周末提去售后吧。&lt;/p&gt;

&lt;p&gt;于是又原封不动宠幸将拆下来的东西装了回去，发现掉出来一根弹簧，找不到出处~~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用plowshare在VPS（centos）上下载网盘文件</title>
      <link>http://yuliu.org/2011/05/using_plowfhare_to_download_from_netdrive_on_vps/</link>
      <pubDate>Thu, 19 May 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/05/using_plowfhare_to_download_from_netdrive_on_vps</guid>
	  <description>&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/plowshare&quot;&gt;plowshare&lt;/a&gt;是一个*nix系统中，基于命令行的网盘下载工具，该工具不能自动读取验证码。支持Megaupload, Rapidshare, 2Shared, 4Shared, ZShare, Badongo, Divshare.com, Depositfiles, Netload.in, Sendspace, Usershare, x7.to等网站（&lt;a href=&quot;http://code.google.com/p/plowshare/wiki/Readme&quot;&gt;全部列表&lt;/a&gt;），惊喜发现还支持国内的115。网上有很多在vps上安装plowshare的教程，但是基本上都是从plowshare wiki翻译的，在我的centos 5.5 vps上安装中遇到了一些小问题，所以有了这篇blog，注意该文只针对centos&lt;/p&gt;

&lt;h1&gt;配置rpmforge&lt;/h1&gt;

&lt;p&gt;plowshare需要一众的依赖包，其中一些包在centos官方的镜像中是没有的，因此首先需要配置&lt;a href=&quot;http://wiki.centos.org/AdditionalResources/Repositories/RPMForge&quot;&gt;rpmforge&lt;/a&gt;。&lt;em&gt;现在网上的大部分教程都缺少这一步&lt;/em&gt;，上来就yum instal ***，结果发现yum根本找不到这些包&lt;/p&gt;

&lt;p&gt;rpmforge是Dag和其他包的集合，为centos提供了超过5000个的包，包括wine、vlc、mplayer等（&lt;a href=&quot;http://packages.sw.be/&quot;&gt;所有包列表&lt;/a&gt;）。安装plowshare所需的libcaca、caca-utils、tesseract-ocr等。&lt;/p&gt;

&lt;p&gt;1.首先进入&lt;a href=&quot;http://packages.sw.be/rpmforge-release/&quot;&gt;http://packages.sw.be/rpmforge-release&lt;/a&gt;选择适合硬件架构的&lt;tt&gt;rpmforge-release&lt;/tt&gt;包，可以使用uname -i来检查自己的硬件架构，我选的是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el5.rf.i386.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.安装DAG's GPG密钥&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.验证下载的&lt;tt&gt;rpmforge-release&lt;/tt&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm -K rpmforge-release-0.5.2-2.el5.rf.*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.安装rpmforge&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm -i rpmforge-release-0.5.2-2.el5.rf.*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;程序将配置yum库配置文件并导入相应的GPG密钥，这样rpmforge就配置好了。&lt;/p&gt;

&lt;h1&gt;安装plowshare&lt;/h1&gt;

&lt;p&gt;1.安装一众依赖包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install curl recode imagemagick tesseract-ocr-eng spidermonkey-bin perlmagick libcaca caca-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;记得要装caca-utils，因为CLI下将网盘验证码图片装换为ASCII的img2txt不是包含在libcaca里面，而是在caca-utils里面。网上一众教程都没有提到这个~&lt;/p&gt;

&lt;p&gt;2.下载plowshare，注意将代码中的version换成相应的版本号&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://plowshare.googlecode.com/files/plowshare-SVN-r[VERSION]-snapshot.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果喜欢稳定版&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://plowshare.googlecode.com/files/plowshare-[VERSION].tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.解压缩和安装（root下），&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xvzf plowshare-SVN-rVERSION-snapshot.tar.gz
cd plowshare-SVN-rVERSION-snapshot.tar.gz
setup.sh install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稳定版把文件名换换就行&lt;/p&gt;

&lt;p&gt;4.使用&lt;/p&gt;

&lt;p&gt;下载&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plowdown FILEURL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plowup FILEURL megaupload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多使用参数参见plowshare的文档吧。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tunnelier自动登录指定的SSH</title>
      <link>http://yuliu.org/2011/05/auto_start_and_login_of_tunnelier/</link>
      <pubDate>Mon, 16 May 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/05/auto_start_and_login_of_tunnelier</guid>
	  <description>&lt;p&gt;Tunnelier是一个很好的软件，但选项中没有随系统启动的功能，但是这种软件怎么能不自动启动呢。&lt;/p&gt;

&lt;p&gt;其实简单DIY，利用tunnelier的命令行就能很简单的解决这个问题。&lt;/p&gt;

&lt;p&gt;在 Tunnelier 配置并成功登录过一次 SSH，并将该配置保存为abc.tlp。&lt;/p&gt;

&lt;p&gt;之后  Tunnelier 的快捷方式的最后面加上&lt;code&gt;-loginOnStartup&lt;/code&gt;和&lt;code&gt;-profile=&quot;路径\abc.tlp&lt;/code&gt;参数，然后拷贝一个丢在启动里面即可~~&lt;/p&gt;

&lt;p&gt;无需向官网说的那样，添加成一个服务即可实现Tunnelier自动登录指定的SSH&lt;/p&gt;

&lt;p&gt;Tunnelier 更多的命令行参数可以用&lt;code&gt;Tunnelier.exe /?&lt;/code&gt;查看&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tar解压 tar.bz2文件出错</title>
      <link>http://yuliu.org/2011/05/tar_error_with_bzip2/</link>
      <pubDate>Wed, 11 May 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/05/tar_error_with_bzip2</guid>
	  <description>&lt;p&gt;用tar 解压 tar.bz2文件出错&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;debian:/usr/src# tar jxf linux-2.6.26.tar.bz2&lt;br/&gt;
tar: bzip2: Cannot exec: No such file or directory&lt;br/&gt;
tar: Error is not recoverable: exiting now&lt;br/&gt;
tar: Child returned status 2&lt;br/&gt;
tar: Error exit delayed from previous errors&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;安装bzip2软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install bzip2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>gVIM和中文字符编码</title>
      <link>http://yuliu.org/2011/03/gvim_and_encoding/</link>
      <pubDate>Tue, 22 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/gvim_and_encoding</guid>
	  <description>&lt;p&gt;gVIM 对我来说是作为一个文本类文件查看器和快速编辑器（windows系统下），使用中总是碰到编码的问题。其实在网络上已经有很好的解决方案了，安装&lt;em&gt;fencive&lt;/em&gt;插件即可。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;  http://www.vim.org/scripts/script.php?script_id=1708&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;将下载的 fencview.vim 放入 vim安装目录/plugin  中&lt;/p&gt;

&lt;p&gt;注：该插件是用了&quot;+iconv&quot; 特性，因此确保(解压缩后的)iconv.dll【&lt;a href=&quot;https://sites.google.com/site/mbbill/iconv.dll&quot;&gt;原始下载（墙外）&lt;/a&gt;，&lt;a href=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/03/iconv.zip&quot;&gt;本地&lt;/a&gt;】在win的$PATH路径中（放到vim安装目录下即可）&lt;/p&gt;

&lt;p&gt;我使用 gVIM 通常是作为文件查看器，因此这种乱码问题遇到较多。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>没有光驱装XP系统</title>
      <link>http://yuliu.org/2011/03/xp_install_without_cd_dirver/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/xp_install_without_cd_dirver</guid>
	  <description>&lt;p&gt;自己的步骤，X61通过
1. 将XP镜像拷到欲重装系统电脑的非C盘上&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载 通用PE工具箱 http://hi.baidu.com/uepon&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将通用PE工具箱 刻录 到U盘。&lt;br/&gt;
Tips：最好不要用安装程序自带的刻录方式，这个方式格式化U盘的时候好像不是快速格式化。因此选择刻录到镜像，在用ultraISO写入&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;U盘启动进入PE，打开虚拟光驱（桌面上），装入预先复制进来的镜像&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拔掉U盘&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装，复制文件&lt;br/&gt;
Tips 1：如果是2003的PE，直接运行安装，安装选项不可选，但可进入I386文件夹，选winnt32.exe程序安装&lt;br/&gt;
Tips 2：记得在高级处，选择复制所有安装文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装程序不会自动重启，手动重启&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启后进入安装界面安装&lt;br/&gt;
Tips 1：如果蓝屏，一般是因为bios的硬盘设置有问题，改为compatible即可&lt;br/&gt;
Tips 2：安装中如果出现不能复制文件，是因为原系统为vista，未格盘后就直接装XP就会出现该问题，可格调安装盘后重来~&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;之后我的电脑就OK了~大家有什么问题还欢迎补充&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    
    <item>
      <title>使用C#进行基于PI的开发（三）- 应用PISDK和PIAPI从PI数据库读取数据</title>
      <link>http://yuliu.org/2011/03/pi_development_using_csharp_3/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/pi_development_using_csharp_3</guid>
	  <description>&lt;p&gt;上次说了这次的题目是对PI数据库中的数据进行读取和写入，可是为了等了这么久呢?出了自己比较懒以外,遇到了一点麻烦也是一个原因呢?后面又说&lt;/p&gt;

&lt;h1&gt;1 应用SDK从PI数据库读取数据&lt;/h1&gt;

&lt;p&gt;我们知道PI数据库的数据分别存储在Snapshot或者Archive中,一个是快照一个是档案文件,这样做是为了方便PI数据库对数据进行压缩.那么自然对数据库的读取也分为对Snapshot和Archive读取.snapshot和archive的值都是用PIValue的形式表示的， PIValue对象包括了数值和时间。应用SDK从数据库中获取snapshop或者archive的值很简单。
首先连接数据库，声明一个PIServer：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_piServer = piSDK.Servers.DefaultServer；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后利用PIServer的Points属性访回一个点的集合，再通过tagName来获取点：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PIPoint pt = _piServer.PIPoints[tbxTagName.Text];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是使用Snapshot，直接声明一个PIValue通过PIPoint的Snapshot属性来返回值：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pv = pt.Data.Snapshot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后我们就可以通过PIValue的Value属性和TimeStamp属性来获取snapshot的值和该值对应的时间了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tbxValue.Text = pv.Value.ToString();
tbxTime.Text = pv.TimeStamp.LocalDate.ToString();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要读取Archive的值，那么要稍微麻烦一点，应为你要给定读取的时间和模式，PIPoint对象的ArcValue方法是用来获取Archive的值，帮助的说明如下：&lt;/p&gt;

&lt;p&gt;object.ArcValue TimeStamp, Mode, AsynchStatus&lt;/p&gt;

&lt;p&gt;这个应该是VB的语法吧，我们可以看出他有三个参数。第一个是时间，C#中我们可以直接传一个DateTime格式的数据进去，当然你也可以使用 PITime对象表示的时间，或者一个字符串。Mode代表取出的模式，因为PI数据库并不是每个时间都存有数据的，所以在你可以选择模式是读取你输入时间的当前点，后面一个点，前面一个点或者插值表示的时间。最后一个参数不解，文档里面没有说明，VB的例子则直接没有传这个参数，应该是一个可选参数，我的处理方法如下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;RetrievalTypeConstants rtType;
rtType = (RetrievalTypeConstants)piSDK.PIConstants[&quot;RetrievalTypeConstants&quot;][cbxValue.Text].Value;
pv = pt.Data.ArcValue(dt, rtType, new PISDKCommon.PIAsynchStatus());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RetrievalTypeConstants 就是表示存取模式的，我这里使用过一个下拉列表框获得可用的模式的，最后一个参数是通过传一个新的实例下去，这里不知道这样和不合理，反正可以读出数据我就没有管了，又没有达人解释一下怎么处理这种VB的可选参数的情况呢？我学着VSTS的那种Type.Missing又不可以。&lt;/p&gt;

&lt;p&gt;然后读出来的PIValue同样包含一个数值和一个时间，现在我想大家应该理解为什么PIValue里面要包含一个时间了吧。&lt;/p&gt;

&lt;p&gt;我觉得应用SDK很简单，感觉和开发Excel很象，都是调用Com，也挺符合.net的开发习惯的，文档也好，每个对象还有一个详细的VB例子，虽然不是.net的，但是也可以大致了解得差不多。&lt;/p&gt;

&lt;h1&gt;2 应用SDK向PI数据库写入数据&lt;/h1&gt;

&lt;p&gt;在PIData对象中有一个UpdateValue方法和UpdateValues方法，顾名思义，一个是更新单个数据，一个是更新一批数据。但是文档里面红红的标着Not Implemented两个单词，心顿时凉了，考虑到文档的版本比我实际使用的SDK版本第一点，去Object Browser里面搜索了一下，果然找到了这个方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public virtual void UpdateValue(object newValue, object TimeStamp, PISDK.DataMergeConstants MergeType, PISDKCommon.PIAsynchStatus asynchStatus)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这些参数的意思没有文档也挺好理解的，这里就不说了，可是当我尝试用这个方法去更新数据库的时候，一样抛出了Not Implemented的错误，当时心里非常的郁闷，这个也就是开头我说到的麻烦。我的SDK的版本是1.2.0，问了一个比较有经验的人，他说他没有遇到过不能写入的问题，等有时间去问问他，看看是不是版本的问题，如果有人能写入的，请给我说一下你们的版本；&lt;/p&gt;

&lt;h1&gt;3 应用API从PI数据库读取数据&lt;/h1&gt;

&lt;p&gt;SDK不行，还好我们还有PI-API，这个感觉和Win32 API挺象的吧，都是一写用C写的函数，PISDK其实就是把PIAPI包装了一下，可惜我对P/Invoke不怎么熟悉，如果大家对这个也不熟悉的话，我觉得这两篇文章还是不错，作为预备知识。&lt;/p&gt;

&lt;p&gt;在C#中通过P/Invoke调用Win32 DLL
如何在C#中使用Win32和其他库&lt;/p&gt;

&lt;p&gt;这两篇文章看了我还是颇有收获的，至少知道引用类型在传递的时候不需要ref关键字，因为在.net中本身就是按地址传递的，呵呵，可能是基础知识太差。&lt;/p&gt;

&lt;p&gt;不过看API的文档和SDK的文档相比真是天壤之别，API文档只有一个简单的概述，例子也没有，参数的说明更是往往只有一句话，不过还好吧，我慢慢的试还是试出来了一些。&lt;/p&gt;

&lt;p&gt;对于数据读取和写入还是分为snapshot和archive，就是两个不同的函数，参数也差不多类似。&lt;/p&gt;

&lt;p&gt;PI-API函数是按组分开的，有Point函数，Archive函数和snapshot函数等。&lt;/p&gt;

&lt;p&gt;从archive数据库读取数据有两个，一个是扩展函数，功能多一些，所以我们在这里使用的是扩展函数来读取数据，其文档的声明如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int32 PIPROC piar_getarcvaluex(
int32 ptnum,
int32 mode,
float64 PIPTR *drval,
int32 PIPTR *ival,
void PIPTR *bval,
uint32 PIPTR *bsize,
int32 PIPTR *istat,
int16 PIPTR *flags,
PITIMESTAMP PIPTR *time);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;int32,uint32这些都是PIAPI里面自己定义的类型，从名字可以很简单的看出他们对应32位整数，32位无符号整数，在C#中这些，.net已经给我们定制好了，还比较方便。&lt;/p&gt;

&lt;p&gt;PITIMESTAMP 是一个结构体，定义很简单，我们直接在C#中定制一个类似的结构就好了。&lt;/p&gt;

&lt;p&gt;ptnum是PI tag号对应的一个Int32位的整数来代表数据库中的一个点，可以通过API函数pipt_findpoint把Tag名字转换成ptnum。&lt;/p&gt;

&lt;p&gt;mode和SDK里面的模式很类似，就是看是读取前面一个点，还是后面一个点的值。&lt;/p&gt;

&lt;p&gt;如果读取出来的是浮点值，drval就是这个值；如果读取出来的是整型值，ival就是这个值；bval是一个字符串，bsize是这个字符串的缓冲区大小，istat是代表数值量的值，flags文档上面的说明是&lt;/p&gt;

&lt;p&gt;Data quality flag mask不解。time是值对应的时间，相当于SDK里面的pv.TimeStamp.LocalDate。&lt;/p&gt;

&lt;p&gt;对于字符串，这里我看了半天，因为string类型是一个不定长的字符串，所以是不能用在这个地方的，这个地方的bval应该是使用 StringBuilder,StringBuilder.Capacity就表示了bsize，这一点还是冲上面那两篇文章看到的，真是基础差，呵呵。&lt;/p&gt;

&lt;p&gt;对于void指针，我是把它处理成为object类型，因为我们基本上不用到字符串的值，所以这里我也没有测试，达人指导一下，呵呵。综上，我的C#格式的函数是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DllImport(&quot;piapi32.dll&quot;, CharSet = CharSet.Ansi, SetLastError = true, CallingConvention = CallingConvention.StdCall)]
public static extern Int32 piar_getarcvaluex(
Int32 ptnum,
Int32 mode,
ref Double drval,
ref Int32 ival,
[MarshalAs(UnmanagedType.AsAny)] object bval,
ref UInt32 bsize,
ref Int32 istat,
ref Int16 flags,
ref PITime.PITIMESTAMP time);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第五个参数必须Mashall成AsAny类型，要不直接使用object类型是不行的。那么我怎么知道他是Any类型呢？因为文档上面VB的函数调用声明是bVal As Any,这也是一点灵感吧。至于返回的Int32值是代表调用是否成功的，就和win32  API类似吧。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用C#进行基于PI的开发（二）--常用对象的学习</title>
      <link>http://yuliu.org/2011/03/pi_development_using_csharp_2/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/pi_development_using_csharp_2</guid>
	  <description>&lt;p&gt;&lt;a href=&quot;/2011/03/pi_development_using_csharp/&quot;&gt;上一次&lt;/a&gt;的例子是通过PI-SDK获取Tag的属性并且修改它，我想更重要的是怎么取出Tag的值和进行更新吧。在进行尝试之前看了看文档，了解了一下PISDK的对象结构，下面这一张就是PISDK的结构图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ffs.nuclear2power.com/wp-content/uploads/2011/03/PISDKModel.jpg&quot; title=&quot;PISDKModel&quot; alt=&quot;PISDKModel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;简要了解在例子中要用到的对象，并把它们的描述进行了简单的翻译，我想翻译的目的应该是帮助自己更好的进行学习，给出英文对照。不妥之处，忘大牛们指正：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The Server object represents a single server (data archive). Server objects are retrieved from the Servers collection and provide access to the basic entities represented on each server, such as points, point classes, digital states, users, and groups. Some basic properties are available from the Server object as initially retrieved from the Servers collection.&lt;/p&gt;

&lt;p&gt;Typically a program will require a network connection to the server. Connections are established either by calling the Open method of the Server object explicitly or by accessing a property or calling a method of the Server object that requires server access, forcing an implicit connection.
Many of the services available through the Server object are accessed through its properties which return other objects. For example, the PIPoints property provides a PIPoints collection object for accessing the various points on a server.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;服务器（Server）对象表示了一个单独的PI数据库服务器，服务器对象可从服务器集合中获得并且提供了访问每个数据库中的实体的方法，这些实体包括点，点集合，数字量（开关量），用户和组。服务器对象提供了一些基本的属性从而在服务器集合中队服务器进行初始化。&lt;/p&gt;

&lt;p&gt;一般地，程序连接到服务器需要网络连接属性，这个连接可以通过服务器对象的Open方法显式的进行，也可以通过服务器对象的某个属性或方法连接需要验证的服务器来进行一个隐式的连接。&lt;/p&gt;

&lt;p&gt;上面这一段有点不太懂，直到目前我都没有用过显式的Open方法，都是通过&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_piServer = piSDK.Servers.DefaultServer;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种所谓的隐式方法来连接，这个是不是就是所谓的隐式连接？因为在PISDK安装的时候指定了一个PI数据源，所以DefaultServer就是这个？所以我访问的时候都不需要输入用户或者密码&lt;/p&gt;

&lt;p&gt;我们可以通过服务器对象的属性来返回其他的对象从而获得很多服务。例如，通过服务器对象的PIPoints属性返回的PIPoints集合的对象来访问数据库里面的不同的点。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A PIConstant collection maps display strings to PI-SDK enumerations.  This provides a way for an application to display strings indicating choices of behavior for a user to select particular actions.  The application then retrieves the associated constant and passes it to a particular method being called. A PIConstant collection contains members, stored and accessed as NamedValue objects that represent the display string (the name) and the constant (the value).  A PIConstant collection is retrieved using PISDK.PIConstants.Item.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;PIConstant集合映射字符串到PI-SDK枚举。（使字符串和枚举的项一一对应）。它为程序提供了字符串来代表用户选择的一个特殊的操作，然后程序可以把这个字符串对应的值获得并且把它传送到使用的方法里面去。PIConstant集合包含了Members（不知道什么意思），存贮和访问NamedValue对象。NamedValue对象是一个字符串（名字）-常量（数值）对。PIConstant集合中的对象通过PISDK.PIConstants.Item来获取&lt;/p&gt;

&lt;p&gt;我觉得这个PIConstant集合就是相当于在C#中用DialogueResult枚举中用OK代表某个具体的意思。具体代表的东西我们不用关心，知道是什么就可以了。NamedValue就是一个字符串-常量对，有点像一个字典吧，最后一句话说PISDK.PIConstants.Item来获取PIContant,但是我在C#中PISDK.PIConstants没有Item属性，反而使直接通过PISDK.PIConstants[Name]取到。同时NamedValue是在PISDKCommon命名空间下面&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The PIPoint object represents a point on a PI Server.  The PIPoint is the primary access point to data on the Server as well as configuration of a point's properties.&lt;/p&gt;

&lt;p&gt;PIPoint对象表征PI数据库里面的点，PIPoint是访问数据库里面点的值和属性的主要方法。&lt;/p&gt;

&lt;p&gt;The PIData object is associated with a single PIPoint and is used to send and retrieve values to and from the server.  It is accessed through the Data property of the PIPoint.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;PIData对象是和单独的PIPoint联系的，它从服务器获取数据或者写回数据到服务器。它通过PIPoint的Data属性得到。&lt;/p&gt;

&lt;p&gt;本来翻译完这些准备再把例子试验一下的，但是没有时间了，下次吧！先作一下铺垫。&lt;/p&gt;

&lt;p&gt;这些英文文字都是来源于PI的Manual，版权归OSISOFT所有，与我无关，至于我翻译的中文文字只是简单的鹦鹉学舌，版权仍然是OSISOFT的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用C#进行基于PI的开发（一）</title>
      <link>http://yuliu.org/2011/03/pi_development_using_csharp/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/pi_development_using_csharp</guid>
	  <description>&lt;p&gt;根据PI的SDK的文档,从这里开始下手吧,这个文档的版本有点早,大概是2002年的,里面没有.net的例子,还好里面大多数是VB的例子,我想应该可以直接搬过来吧.于是开始动手.&lt;/p&gt;

&lt;p&gt;首先欲基于PI-SDK开发PI数据库,必须先安装PI-SDK,然后再VS中新建了一个aspnet网站,添加引用:PI-SDK 1.2 Type Library 和 PISDKCommon 1.2 Type Library&lt;/p&gt;

&lt;p&gt;接着看文档上面VB的例子代码是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Option Explicit
Dim srv as Server
Dim pt As PIPoint
for Each srv In Servers
Combo1.AddItem srv.Name
Next srv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了把这两个地方改成能运行得C#代码还花费了不少力气,因为原来没有做的东西都是很简单的.net东西,基本上没有用到过和COM组件进行交互.首先说什么不能实例花,接着又说什么Servers不行,花了很多时间在PISDK下面找了一个能实例化的类PISDKClass,后来又发现原来Servers 是这个对象的一个属性.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private PISDK.IPISDK piSDK= new PISDK.PISDKClass();
private PISDK.Server _piServer;
private PISDK.PIPoint _piPoint;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Page_Load事件枚举所有的数据源,添加到DropSownlist.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foreach(PISDK.Server item in piSDK.Servers)
{
DropDownList1.Items.Add(srv.Name);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置_piServer为dropdown里面选中的数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_piServer = piSDK.Servers[DropDownList1.Text];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后下面接着防置一个文本框来读取用户输入的Tag点,Tag有点相当于普通数据库的字段.但是又不一样,关于这个暂时不细说了&lt;/p&gt;

&lt;p&gt;和一个ListBox来得到这个Tag的所有属性.代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_piPoint = _piServer.PIPoints[tbxTagName.Text];
ListBox1.Items.Clear();
foreach (PISDK.PointAttribute ptatr in _piPoint.PointAttributes)
{
ListBox1.Items.Add(ptatr.Name);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;读取Tag属性的值可以用下述属性.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tbxAttValue.Text = _piPoint.PointAttributes[ListBox1.Text].Value.ToString();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要更新这个属性的值呢?仍然很简单&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PISDK.PointAttribute ptatr;
_piPoint = _piServer.PIPoints[tbxTagName.Text];
ptatr = _piPoint.PointAttributes[lblAttrName.Text];
_piPoint.PointAttributes.ReadOnly = false;
ptatr.Value = tbxAttValue.Text;
_piPoint.PointAttributes.ReadOnly = true;
blNotion.Text = &quot;更新成功！&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实最后一句想用MessageBox可惜在asp.net下面一直找不到好的使用MessageBox的方法,原来在CodeProject上面找了一个,但是因为后来发现在Atlas的updatepanel中不能使用,也就作罢了&lt;/p&gt;

&lt;p&gt;OK,上面就是我根据SDK-Manual里面的一个Basic例子,用C#改写了一下,实现了和例子一样的功能,虽然今天花费了不少时间,最后做出来的东西看起来却很简单,不过自己感受到了收获,第一次发文到首页,有点紧张,呵呵!&lt;/p&gt;

&lt;p&gt;下面是一个简单的截图和SDK截图的对比：&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在windows 2003中使用PI Activeview</title>
      <link>http://yuliu.org/2011/03/pi_actieview_and_windows2003/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/pi_actieview_and_windows2003</guid>
	  <description>&lt;p&gt;今天在搞把PDI文件用PI Activeview嵌到网页里面去，搞了半天都不行，使用同样的方法在其他的电脑上面都是OK的，而且我的电脑浏览其他主机上面嵌有PDI的网页也不能显示。分析原因，其他的电脑都是XP或者2000的系统，只有我的是2003，难道是操作系统的原因，搜索了一下，果然在OSISOFT的支持网站上面有这样一片文章&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techsupport.osisoft.com/support_bulletin.aspx?bulletin=126fdb56-a4ba-41dd-95b8-390e85edf4e7&quot; title=&quot;Using PI ActiveView and Windows Server 2003[已失效]&quot;&gt;Using PI ActiveView and Windows Server 2003[已失效]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy一下解决方法粘在这里&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In IIS Manager, right-click on the level of hierarchy for which to change the setting and select &quot;Properties.&quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to the tab &quot;HTTP Headers&quot; and click the &quot;MIME Types...&quot; button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select New and enter the following information&lt;br/&gt;
for Extension: .PDI&lt;br/&gt;
for MIME type: application/octet-stream&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should now see the .PDI under the Registered MIME Types list.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click OK.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop and restart your IIS service for the changes to take effect.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    
    <item>
      <title>零起点VPS建站-2</title>
      <link>http://yuliu.org/2011/03/vps_hosting_from_zero_2/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/vps_hosting_from_zero_2</guid>
	  <description>&lt;p&gt;在 &lt;a href=&quot;/2011/03/vps_hosting_from_zero_1&quot;&gt;上一篇&lt;/a&gt; 里面已经讲了 域名和VPS、VPS安装和虚拟主机配置、FTP的安装等。这里主要介绍一下如何安装discuz和wordpress。&lt;/p&gt;

&lt;h1&gt;1. discuz&lt;/h1&gt;

&lt;p&gt;虚拟主机一节已经说了如何使不同的域名指向不同的目录，假设这里已经OK了，那么接下来就是把discuz下载到对应的目录中。这里有两种方法可以实现，一是下载到电脑上以后在FTP传上去，另外一种是putty进入SSH后直接下载。第一种估计不用讲什么了吧。&lt;/p&gt;

&lt;p&gt;使用第二种方法，就要用到一些简单的linux命令了，当然这些命令我们在安装lnmp的时候都已经用了，他们就是 wget、unzip和cp等。&lt;/p&gt;

&lt;p&gt;找到discuz的下载地址，比如说X1.5 UTF8版本的官方地址是&lt;code&gt;http://download.comsenz.com/DiscuzX/1.5/Discuz_X1.5_SC_UTF8.zip&lt;/code&gt;，那么我们可以直接在putty中输入如下命令下载。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -c http://download.comsenz.com/DiscuzX/1.5/Discuz_X1.5_SC_UTF8.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着使用zip命令解压缩&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unzip Discuz_X1.5_SC_UTF8.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着将解压缩后的upload目录中的所有文件和文件夹，拷贝到虚拟主机对应的目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -R upload/* /home/wwwroot/XXXX.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后？之后就可以参考discuz的官方安装教程了，同样的，给链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.discuz.net/thread-1887949-1-1.htm&quot;&gt;Discuz!X1.5 全新安装图文教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;设置相关目录的文件属性部分，同样也可以采用命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 777 -R 文中给出的目录名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：dz的伪静态模板有两个，选择的时候注意discuz.conf和discuz&lt;em&gt;x&lt;/em&gt;.conf&lt;/p&gt;

&lt;h1&gt;2. wordpress&lt;/h1&gt;

&lt;p&gt;有了dz的安装经验，wordpress也是相同的。&lt;/p&gt;

&lt;p&gt;首先下载wp并解压缩，拷贝到对应目录，有官方中文版的哦&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -c http://cn.wordpress.org/wordpress-3.1-zh_CN.zip
unzip wordpress-3.1-zh_CN.zip
cp -R wordpress/* /home/wwwroot/blog.XXXX.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来进入 域名/wp-admin/install.php即会启动安装过程。&lt;/p&gt;

&lt;p&gt;注：LNMP WordPress安装主题、插件会要求你输入FTP信息，在putty下执行下述命令，就不需要输入这些信息咯。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown -R www 目录      //设置目录下所有文件和目录为www用户所有
chgrp -R www 目录      //设置目录下所有文件和目录为www用户组所有
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;综上，现在在VPS上建站是非常方便的，如果懂一点linux命令和vi就更好了~~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>零起点VPS建站-1</title>
      <link>http://yuliu.org/2011/03/vps_hosting_from_zero_1/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2011/03/vps_hosting_from_zero_1</guid>
	  <description>&lt;p&gt;原来也建过网站，但是大部分都是在自己的电脑上，在VPS上建站还真是0起点~&lt;/p&gt;

&lt;p&gt;开始还以为会遇到很多困难，后来发现现在各种牛人太多，VPS建站基本上已经全自动化了。&lt;/p&gt;

&lt;h1&gt;1. 域名和VPS&lt;/h1&gt;

&lt;p&gt;VPS建站的第一步自然是购买VPS咯，现在销售VPS的人很多，淘宝上面也是一抓一大把，但是为了保证质量保证速度，建议直接购买国外VPS，为了照顾中国用户，现在很多VPS销售商已经支持支付宝了~~&lt;/p&gt;

&lt;p&gt;无责任推荐几个VPS：linode，diahosting，vpsyou。注意第一个只支持信用卡绑定&lt;/p&gt;

&lt;p&gt;域名是可选项，但是我想建站的一般都不会省这个吧，我一般买这个都在godaddy，现在也可以用支付宝了。&lt;/p&gt;

&lt;p&gt;买了vps以后，会得到一个IP地址，这样去godaddy域名控制面板里面将 域名（如XXXX.com 不带www） 指向这个IP地址即可。域名面板里面还可以管理多个二级域名，例如blog@域名，bbs@域名，可以指向不同的VPS，自然也可以都指向刚刚购买的VPS IP。让后再VPS建虚拟主机，将blog@域名指向wordpress，bbs@域名指向discuz。www@域名也可以看做是你购买域名的二级域名，只是这个一般和域名指向同一个链接罢了。&lt;/p&gt;

&lt;h1&gt;2. VPS安装&lt;/h1&gt;

&lt;p&gt;由于linux VPS比较便宜而且用得比较多，这里以linux系统为例，而其中VPS用得最多的发行版是centos 5.5。我也不例外买的这种。&lt;/p&gt;

&lt;p&gt;购买VPS以后，将得到IP地址，SSH密码，SSH用户名。接着你就需要使用一个叫做&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/&quot;&gt;putty&lt;/a&gt; 的工具登陆你的VPS主机了。打开putty，输入地址后open，接着在窗口输入用户名和密码即可登陆。&lt;/p&gt;

&lt;p&gt;前面说到VPS建站基本上是半自动化的，就在于一些牛人已经将网站服务器+数据库都已经打包好了，例如我们这里使用的这个&lt;a href=&quot;http://lnmp.org/index.html&quot;&gt;lnmp&lt;/a&gt;，是一个用Linux Shell编写的可以为CentOS/RadHat、Debian/Ubuntu VPS(VDS)或独立主机安装LNMP(Nginx、MySQL、PHP、phpMyAdmin)生产环境的Shell程序。一键安装方法在lnmp官网中有说明，我这里直接copy了&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;1、下载LNMP一键安装包： 可以选择使用下载版(推荐国外或者美国VPS使用)或者完整版(推荐国内VPS使用)，如果使用下载版执行命令 wget -c http://soft.vpser.net/lnmp/lnmp0.6.tar.gz ，如果使用完整版，执行命令 wget -c http://soft.vpser.net/lnmp/lnmp0.6-full.tar.gz ，执行上述命令后LNMP一键安装包就会被下载到VPS上。&lt;/p&gt;

&lt;p&gt;2、解压LNMP一键安装包： 执行tar zxvf lnmp0.6.tar.gz 或tar zxvf lnmp0.6-full.tar.gz 就会将LNMP一键安装包解压缩。&lt;/p&gt;

&lt;p&gt;3、CentOS下安装步骤 下载版执行命令 cd lnmp0.6/ ，完整版执行命令：cd lnmp0.6-full/&lt;br/&gt;
然后再执行./centos.sh 也可以执行./centos.sh | tee lnmp.log (推荐这种方式,出错时可以到论坛上传lnmp.log日志)，输入要绑定的域名，回车，再输入要设置的MySQL root的密码，回车，提示&quot;Press any key to start...&quot;，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。&lt;/p&gt;

&lt;p&gt;4、Debian下安装步骤 下载版执行命令 cd lnmp0.6/ ，完整版执行命令：cd lnmp0.6-full/&lt;/p&gt;

&lt;p&gt;然后执行./debian.sh 也可以执行./debian.sh | tee lnmp.log (推荐这种方式,出错时可以到论坛上传lnmp.log日志)，输入要绑定的域名，回车，再次输入VPS/服务器所在位置：asia、america、europe、oceania或 africa，回车，再输入要设置的MySQL root的密码，回车，提示&quot;Press any key to start...&quot;，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。安装大约10分钟左右需要设置MySQL root用户的密码。&lt;/p&gt;

&lt;p&gt;5、Ubuntu下安装步骤 下载版执行命令 cd lnmp0.6/ ，完整版执行命令：cd lnmp0.6-full/&lt;/p&gt;

&lt;p&gt;6、然后执行./ubuntu.sh 也可以执行./ubuntu.sh | tee lnmp.log (推荐这种方式,出错时可以到论坛上传lnmp.log日志)，输入要绑定的域名，回车，再输入要设置的MySQL root的密码，回车，提示&quot;Press any key to start...&quot;，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。安装大约10分钟左右需要设置MySQL root用户的密码。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;简单吧~~，安装以后的相关目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql :    /usr/local/mysql
php :      /usr/local/php
nginx :    /usr/local/nginx
网站目录:  /home/wwwroot
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;3. 虚拟主机设置&lt;/h1&gt;

&lt;p&gt;前面提到了咋们的域名、blog@域名，bbs@域名都指到了VPS的IP，那么如何让他们指向不同的地方呢~这时候就需要虚拟主机了即让不同的域名指向不同的目录。&lt;/p&gt;

&lt;p&gt;首先要对一键生成的lnmp进行一点小修改，因为我们一键安装是输入的域名已经配置指向了/home/wwwroot，如果你再通过下面的方式对虚拟主机进行配置将会出现重复，自相矛盾，因此首先需要修改（编辑器 vi, nano什么的都可以）&lt;/p&gt;

&lt;p&gt;/usr/local/nginx/conf/nginx.conf&lt;/p&gt;

&lt;p&gt;找到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server
{
listen       80;
server_name XXXX.com;
index index.html index.htm index.php;
root  /home/wwwroot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将最后一句其修改为你所希望的目录，例如&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root  /home/wwwroot/[XXXX.com];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样nginx网站服务器在解析XXXX.com的时候，便会读取/home/wwwroot/XXXX.com目录下的内容。&lt;/p&gt;

&lt;p&gt;之后可以通过lnmp自带的vhost.sh添加虚拟主机咯&lt;/p&gt;

&lt;p&gt;执行命令：&lt;code&gt;/root/vhost.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;根据提示输入要绑定的域名，回车，如果需要添加更多的域名，输入y，再输入要另外绑定的域名，多个域名可以用空格隔开。&lt;/p&gt;

&lt;p&gt;再输入域名绑定的目录(绝对目录， 如&lt;code&gt;/home/wwwroot/lnmp&lt;/code&gt;，如果不填默认是/home/wwwroot/绑定的域名)，&lt;/p&gt;

&lt;p&gt;再选择是否添加伪静态规则，默认已经有了 Discuz、Wordpress、Sablog、emlog、dabr，可直接输入以上名称即可，如果需要添加自定义伪静态规则，直接输入一个想要的名字，程序会自动创建伪静态文件，直接在&lt;code&gt;/usr/local/nginx/conf/&lt;/code&gt;你自定义的伪静态名字.conf  里面添加伪静态规则就行。&lt;/p&gt;

&lt;p&gt;接下来会提示是否需要启用日志功能，一般情况下不需要启动，直接输入n就行，如需启动，输入y，再输入要定义的日志文件名字，回车就会自动添加虚拟主机。&lt;/p&gt;

&lt;h1&gt;4. 增加FTP功能&lt;/h1&gt;

&lt;p&gt;这里我选择了pureftpd，为什么呢？因为有一篇很好的介绍如何在lnmp中安装它的图文教程，所以我就直接给一个链接好了。里面介绍了如何安装pureftpd，如何将它加入自动启动中等等问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vpser.net/manage/lnmp-pureftpd-cp.html&quot;&gt;lnmp之pureftpd管理面板安装教程[图文]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;恩，还是很简单，先到这里。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>远程桌面连接windows 2000</title>
      <link>http://yuliu.org/2006/11/remote_desktop_to_windows2000/</link>
      <pubDate>Wed, 29 Nov 2006 00:00:00 +0800</pubDate>
      <author>mail@yuliu.org (刘昱)</author>
	  <guid>http://yuliu.org/2006/11/remote_desktop_to_windows2000</guid>
	  <description>&lt;p&gt;知道windows远程桌面是从XP开始的，一直觉得这个是个好东西，使用起来很方便，最近需要远程桌面连接windows 2000的机子，才知道2000也可以使用远程连接，但是设置要稍微麻烦一点。&lt;/p&gt;

&lt;p&gt;首先Windows 2000的各个版本对远程桌面的支持不一样的，Pro版只能连接另外的计算机而不能被其他计算机连接，Server版本以上的就双向都可以了,还好我这台是Server版的.&lt;/p&gt;

&lt;p&gt;欲远程桌面连接到2000(下面都是指Server以上的版本).
首先要在添加删除程序里面添加Windows组件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fs.yuliu.org/images/essay/2006/remote_desktop_to_windows2000_001.jpg&quot; alt=&quot;添加组件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后再控制面板--〉管理工具--〉服务中启动下列服务&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fs.yuliu.org/images/essay/2006/remote_desktop_to_windows2000_002.jpg&quot; alt=&quot;启动服务&quot; /&gt;&lt;/p&gt;

&lt;p&gt;把启动类型改成自动，然后点击启动按钮就好了&lt;/p&gt;

&lt;p&gt;如果这样改了以后还不能被连接上，那么可能还需要去注册表里面修改一下，开启被连接选项，这个在XP和2003里面可以通过右击我的电脑--〉远程改，但是在2000里面这样不行，google了一下，可以通过直接改注册表实现这个功能。在注册表&lt;code&gt;HKEY_LOCAL_MACHINE--&amp;gt;SYSTEM--&amp;gt;CURRENTCONTROLSET--&amp;gt;CONTROL-- &amp;gt;TERMINAL SERVICE&lt;/code&gt;中修改(如果不存在就添加)&lt;code&gt;fDenyTSConnections&lt;/code&gt;的值为0&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fs.yuliu.org/images/essay/2006/remote_desktop_to_windows2000_003.jpg&quot; alt=&quot;修改注册表&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

